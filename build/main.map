{"version":3,"sources":["webpack:///webpack/bootstrap efd62fcb4d4ebf0c8983","webpack:///./server/http-codes.js","webpack:///./server/api/concepts/members/model.js","webpack:///external \"express\"","webpack:///external \"mongoose\"","webpack:///./utils/pipe-objects.js","webpack:///external \"body-parser\"","webpack:///./utils/user-token.js","webpack:///./settings/index.js","webpack:///external \"bcrypt\"","webpack:///./server/api/concepts/articles/model.js","webpack:///./server/api/concepts/events/model.js","webpack:///./server/api/concepts/photos/model.js","webpack:///./server/api/concepts/photos/storage/uploadImage.js","webpack:///external \"path\"","webpack:///./server/index.js","webpack:///external \"nuxt\"","webpack:///./server/api/index.js","webpack:///./server/api/routes.js","webpack:///./server/api/concepts/members/index.js","webpack:///./server/api/concepts/members/api.js","webpack:///./server/api/concepts/members/controllers.js","webpack:///./server/api/concepts/members/query-builder/index.js","webpack:///./prototypes/member.js","webpack:///./server/api/concepts/members/authorizations.js","webpack:///./server/api/concepts/members/services.js","webpack:///external \"jwt-simple\"","webpack:///./server/api/concepts/members/tasks/pre/index.js","webpack:///./server/api/concepts/members/tasks/post/index.js","webpack:///./prototypes/credentials.js","webpack:///./server/api/concepts/articles/index.js","webpack:///./server/api/concepts/articles/api.js","webpack:///./server/api/concepts/articles/controllers.js","webpack:///./server/api/concepts/articles/query-builder/index.js","webpack:///./server/api/concepts/articles/query-builder/filters.js","webpack:///./server/api/concepts/articles/authorizations.js","webpack:///./server/api/concepts/articles/tasks/pre/index.js","webpack:///./server/api/concepts/articles/tasks/post/index.js","webpack:///./server/api/concepts/events/index.js","webpack:///./server/api/concepts/events/api.js","webpack:///./server/api/concepts/events/controllers.js","webpack:///./server/api/concepts/events/query-builder/index.js","webpack:///./server/api/concepts/events/query-builder/filters.js","webpack:///./server/api/concepts/events/authorizations.js","webpack:///./server/api/concepts/events/tasks/pre/index.js","webpack:///./server/api/concepts/events/tasks/post/index.js","webpack:///./server/api/concepts/photos/index.js","webpack:///./server/api/concepts/photos/api.js","webpack:///./server/api/concepts/photos/controllers.js","webpack:///./server/api/concepts/photos/query-builder/index.js","webpack:///./server/api/concepts/photos/authorizations.js","webpack:///./server/api/concepts/photos/tasks/pre/index.js","webpack:///./server/api/concepts/photos/tasks/post/index.js","webpack:///external \"multer\"","webpack:///external \"fs\"","webpack:///./server/default-properties.js","webpack:///./utils/response-maker.js","webpack:///./utils/controller-utils.js","webpack:///./server/middlewares/index.js","webpack:///./nuxt.config.js"],"names":[],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;;;;;;ACxCA,oC;;;;;;ACAA,qC;;;;;;;;ACAA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,eAAe;;AAEf;AACA;;;;;;;AChBA,wC;;;;;;;;;ACAqC;AACrC;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,GAAG;AACH;;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;AAED,2BAAkC;AAAA;AAAA;AAClC;AAAA;AAAA;;;;;;;ACvBA,mC;;;;;;;ACAA;;AAEA;AACA;;AAEA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;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,8IAA2F,MAAM;AACjG;AACA,GAAG;AACH;;;;;;;;;;;;;ACrEA;AACa;AACJ;;AAET,sBAAsB,qDAAqD;AAC3E;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,qBAA4B,8BAA8B;AAC1D;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEQ;;;;;;;;;;;;;;ACdW;AACnB,OAAO,iBAAiB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEQ;;;;;;;AC5BR,mC;;;;;;ACAA,+B;;;;;;;;;;;;;;;ACA4B;AACkB;AACf;;AAEvB;;;;;;;;;;ACJR;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRoB;;AAEpB;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,mBAAmB;AAC1B,OAAO,mEAAmE;AAC1E,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap efd62fcb4d4ebf0c8983","const errorCodes = {\n  OK: 200,\n  CREATED: 201,\n  INTERNAL_ERROR: 500,\n  UPDATED: 260,\n  NOT_FOUND: 404\n}\n\nexport default errorCodes\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/http-codes.js\n// module id = 0\n// module chunks = 0","const mongoose = require('mongoose')\n\nlet schema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'El nombre es obligatorio']\n  },\n  surname: {\n    type: String,\n    required: [true, 'Los apellidos son obligatios']\n  },\n  articles: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Article'\n  }],\n  email: {\n    type: String,\n    required: [true, 'El correo electrónico es obligatorio'],\n    unique: true\n  },\n  password: {\n    type: String,\n    required: [true, 'La contraseña es obligatoria']\n  },\n  pvLvl: {\n    type: Number,\n    default: 0\n  },\n  registeredAt: {\n    type: Date,\n    default: Date.now\n  }\n})\n\nclass MemberClass {}\n\nschema.loadClass(MemberClass)\n\nlet membersModel = mongoose.model('Member', schema)\n\nexport default membersModel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/model.js\n// module id = 1\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 3\n// module chunks = 0","export function pipe (theObject, execFN) {\n  function through (conditionsWithFNS) {\n    for (let i = 0; i < conditionsWithFNS.length; i++) {\n      let [condition, fn] = conditionsWithFNS[i]\n      if (condition) theObject = fn(theObject)\n      if (condition && theObject === undefined) {\n        throw new Error('No function can return undefined')\n      }\n    }\n  }\n\n\n  const retrieve = () => theObject\n  const fns = {through, retrieve}\n\n  return execFN.bind(fns)()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./utils/pipe-objects.js\n// module id = 4\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","import {LEVELS, secret, userTokenKey} from '../settings'\nconst jwtSimple = require('jwt-simple')\n\nexport const decode = (token) => jwtSimple.decode(token, secret)\nexport const encode = (objectUser) => jwtSimple.encode(objectUser, secret)\n\nexport function recoverUser (req, res, next) {\n  const userToken = req.headers[userTokenKey] || req.query.token\n  if (userToken) {\n    try {\n      req.user = decode(userToken)\n      req.loginLvl = {\n        isAdmin: req.user.pvLvl >= LEVELS.isAdmin,\n        isVocal: req.user.pvLvl >= LEVELS.isVocal,\n        isPartner: req.user.pvLvl >= LEVELS.isPartner\n      }\n    } catch (error) {\n    } finally {\n      next()\n    }\n  } else next()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./utils/user-token.js\n// module id = 6\n// module chunks = 0","const developing = process.env.NODE_ENV !== 'production'\n\nconst dbs = {\n  test: 'mongodb://localhost/adifiatest',\n  prod: 'mongodb://localhost/adifia'\n}\n\nexport const PORT = process.env.PORT || 3000\nexport const HOST = process.env.HOST || 'localhost'\nexport const DB = developing ? dbs.test : dbs.prod\n\nexport const ROLS = ['Socio', 'Vocal', 'Secretario', 'Tesorero', 'Presidente']\n\nexport const LEVELS = (function () {\n  const levels = {}\n  for (let rolIndex = 0; rolIndex < ROLS.length; rolIndex++) {\n    const rol = ROLS[rolIndex]\n    levels[rol] = rolIndex\n  }\n  return levels\n})()\n\nexport const secret = ':q91dMHPT*;\"WX^0%ih'\nexport const userTokenKey = 'jwt-user-token'\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./settings/index.js\n// module id = 7\n// module chunks = 0","module.exports = require(\"bcrypt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcrypt\"\n// module id = 8\n// module chunks = 0","const mongoose = require('mongoose')\n\nlet schema = new mongoose.Schema({\n  title: {\n\n  },\n  body: {\n\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  state: {\n    type: Number,\n    default: 0\n  },\n  author: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Member'\n  }\n})\n\nclass ArticleClass {}\n\nschema.loadClass(ArticleClass)\n\nlet articlesModel = mongoose.model('Article', schema)\n\nexport default articlesModel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/model.js\n// module id = 9\n// module chunks = 0","const mongoose = require('mongoose')\n\nlet schema = new mongoose.Schema({\n\n  title: {\n\n  },\n\n  description: {\n\n  },\n\n  location: {\n\n  },\n\n  time: {\n\n  },\n\n  date: {\n\n  },\n\n  story: {\n\n  },\n\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n\n  state: {\n    type: Number,\n    default: 0\n  }\n\n})\n\nclass EventClass {}\n\nschema.loadClass(EventClass)\n\nlet eventsModel = mongoose.model('Event', schema)\n\nexport default eventsModel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/model.js\n// module id = 10\n// module chunks = 0","const mongoose = require('mongoose')\n\nlet schema = new mongoose.Schema({\n\n  likes: {\n\n  },\n\n  title: {\n\n  },\n\n  description: {\n\n  },\n\n  location: {\n\n  }\n\n})\n\nclass PhotoClass {}\n\nschema.loadClass(PhotoClass)\n\nlet photosModel = mongoose.model('Photo', schema)\n\nexport default photosModel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/model.js\n// module id = 11\n// module chunks = 0","const path = require('path')\nconst multer = require('multer')\n\nconst basePath = path.join(__dirname, '../../../../..')\nconst PATH = path.join(basePath, '/static/img/photos')\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, PATH)\n  },\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.jpg')\n  }\n})\n\nlet upload = multer({ storage })\n\nexport default upload\nexport const getPathFor = id => path.join(PATH, id + '.jpg')\nexport const getRawPathFor = pathIncomed => path.join(basePath, pathIncomed)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/storage/uploadImage.js\n// module id = 12\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 13\n// module chunks = 0","import express from 'express'\nimport { Nuxt, Builder } from 'nuxt'\nimport {routes, responseJson, logError} from './api/'\nimport {PORT, HOST, DB} from '../settings/'\nimport * as defaults from './default-properties'\nimport middlewares from './middlewares'\n\nconst mongoose = require('mongoose')\nconst path = require('path')\n\n// Config database\n\nmongoose.connect(DB)\n\n// Config express\n\n// eslint-disable-next-line\nfor (const functionName in defaults) {\n  const fn = defaults[functionName]\n  express.request.__proto__[functionName] = fn //eslint-disable-line\n}\n\nconst app = express()\n\napp.set('port', PORT)\n\n// Import API Routes\nfor (const route in routes) {\n  const router = routes[route]\n  const finalRoute = '/api' + route\n  console.log('estableciendo ' + finalRoute)\n  app.use(finalRoute, router)\n}\n\n// Import and Set Nuxt.js options\nlet config = require('../nuxt.config.js')\nconfig.dev = !(process.env.NODE_ENV === 'production')\n\n// Init Nuxt.js\nconst nuxt = new Nuxt(config)\n\n// Build only in dev mode\nif (config.dev) {\n  const builder = new Builder(nuxt)\n  builder.build()\n}\n\n// Give nuxt middleware to express\napp.use('/api/*', responseJson, logError)\napp.use(nuxt.render)\n\n// Listen the server\napp.listen(PORT, HOST)\nconsole.log('Server listening on ' + HOST + ':' + PORT) // eslint-disable-line no-console\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/index.js\n// module id = 14\n// module chunks = 0","module.exports = require(\"nuxt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nuxt\"\n// module id = 15\n// module chunks = 0","import routes from './routes'\n\nexport {routes}\n\nexport function responseJson (req, res) {\n  res.status(res.locals.status || 200).json(res.locals)\n}\n\nexport function logError (err, req, res, next) {\n  console.log(err.message)\n  console.log(err)\n  if (!res.locals.status) {\n    // console.log('Estableciendo error 500', err)\n    res.locals = {\n      status: 500,\n      message: 'Hubo un error interno'\n    }\n  }\n  res.status(res.locals.status).json(res.locals)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/index.js\n// module id = 16\n// module chunks = 0","import members from './concepts/members'\nimport articles from './concepts/articles'\nimport events from './concepts/events'\nimport photos from './concepts/photos'\n\nexport default {\n  '/members': members,\n  '/articles': articles,\n  '/events': events,\n  '/photos': photos\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/routes.js\n// module id = 17\n// module chunks = 0","import router from './api'\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/index.js\n// module id = 18\n// module chunks = 0","import {Router} from 'express'\nimport {create, retrieve, update, destroy, get} from './controllers'\nimport {createAuth, retrieveAuth, updateAuth, destroyAuth, getAuth} from './authorizations'\nimport {logIn} from './services'\n\n// tasks\nimport {\n  retrieve as preRetrieveTasks,\n  update as preUpdateTasks,\n  destroy as preDestroyTasks,\n  get as preGetTasks,\n  create as preCreateTasks\n  // logIn as preLoginTasks\n} from './tasks/pre'\n\nimport {\n  retrieve as postRetrieveTasks,\n  update as postUpdateTasks,\n  destroy as postDestroyTasks,\n  get as postGetTasks,\n  create as postCreateTasks,\n  logIn as postLoginTasks\n} from './tasks/post'\n\nconst bodyParser = require('body-parser')\n\nlet router = new Router()\n\nrouter.post('/login', bodyParser.json(), logIn, postLoginTasks)\nrouter.get('/', retrieveAuth, preRetrieveTasks, retrieve, postRetrieveTasks)\nrouter.post('/', bodyParser.json(), createAuth, preCreateTasks, create, postCreateTasks)\nrouter.get('/:id', getAuth, preGetTasks, get, postGetTasks)\nrouter.put('/:id', bodyParser.json(), updateAuth, preUpdateTasks, update, postUpdateTasks)\nrouter.delete('/:id', destroyAuth, preDestroyTasks, destroy, postDestroyTasks)\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/api.js\n// module id = 19\n// module chunks = 0","import {filterFor} from './query-builder'\nimport Member from './model'\nimport httpCodes from '../../../http-codes'\nimport MemberProto from '../../../../prototypes/member'\n\nexport function retrieve (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const query = filterFor(req)\n  query.exec((err, members) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    let data = {\n      members: members.map(member => new MemberProto(member))\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'Todos los miembros fueron recuperados', data)\n    next()\n  })\n}\nexport function create (req, res, next) {\n  const {createGoodResponse, createBadResponse, getMongoDocumentErrors} = req\n  let member = new Member(req.body)\n  member.save((err, memberCreated) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubieron errores en el documento', {errors: getMongoDocumentErrors(err)})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.CREATED, 'El miembro fue creado correctamente', {memberCreated})\n    next()\n  })\n}\n\nexport function get (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Member.findById(req.params.id, (err, member) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    let data = {\n      member: new MemberProto(member)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El miembro fue recuperado correctamente', data)\n    next()\n  })\n}\n\nexport function update (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const $set = req.body\n  console.log($set)\n  Member.findByIdAndUpdate(req.params.id, {$set}, (err, member) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El miembro fue actualizado correctamente', {member})\n    next()\n  })\n}\n\nexport function destroy (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Member.findByIdAndRemove(req.params.id, (err, member) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El miembro fue eliminado correctamente', {member})\n    next()\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/controllers.js\n// module id = 20\n// module chunks = 0","import Member from '../model'\nimport {pipe} from '../../../../../utils/pipe-objects'\nimport {} from './filters'\n\nfunction buildQuery ({isJustVocal, isAdmin, notPutEvents, user, requestAll}) {\n  let query = Member.aggregate()\n  query.match({})\n\n  let filters = [\n  ]\n\n  return pipe(query, function () {\n    this.through(filters)\n    return this.retrieve()\n  })\n}\n\nexport function filterFor ({query, params, user, loginLvl}) {\n  const state = {\n  }\n\n  return buildQuery(state)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/query-builder/index.js\n// module id = 21\n// module chunks = 0","export default function Member ({name, surname, email, pvLvl, _id}) {\n  this.name = name\n  this.surname = surname\n  this.email = email\n  this.pvLvl = pvLvl\n  this._id = _id\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./prototypes/member.js\n// module id = 23\n// module chunks = 0","export const retrieveAuth = (req, res, next) => next(undefined)\nexport const getAuth = (req, res, next) => next(undefined)\nexport const createAuth = (req, res, next) => next(undefined)\nexport const destroyAuth = (req, res, next) => next(undefined)\nexport const updateAuth = (req, res, next) => next(undefined)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/authorizations.js\n// module id = 24\n// module chunks = 0","import Members from './model'\nimport httpCodes from '../../../http-codes'\n\nimport {encode} from '../../../../utils/user-token'\n\nexport function logIn (req, res, next) {\n  const {createBadResponse} = req\n  Members.findOne({email: req.body.email}, (err, user) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    if (user === null) {\n      res.locals = createBadResponse(httpCodes.NOT_FOUND, 'No se encontró el usuario', {errors: ['El email no existe']})\n      return next(res.locals)\n    }\n    console.log(user)\n    req.locals = {hash: user.password, user}\n    return next()\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/services.js\n// module id = 25\n// module chunks = 0","module.exports = require(\"jwt-simple\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jwt-simple\"\n// module id = 26\n// module chunks = 0","import Member from '../../model'\nimport {ROLS} from '../../../../../../settings/index'\nimport httpCodes from '../../../../../http-codes'\nconst bcrypt = require('bcrypt')\nconst saltRounds = 10\n\nfunction checkIfIsTheFirst (req, res, next) {\n  Member.find({}).exec((err, users) => {\n    if (err) {\n      console.log(err)\n      return next(err)\n    }\n    if (users.length === 0) {\n      req.body.pvLvl = ROLS.length\n    }\n    next()\n  })\n}\n\nfunction signPassword (req, res, next) {\n  const {password} = req.body\n\n  if (!req.body.password) return next()\n\n  bcrypt.genSalt(saltRounds, function (err, salt) {\n    if (err) {\n      console.log(err)\n      return next(err)\n    }\n    bcrypt.hash(password, salt, function (err, hash) {\n      if (err) {\n        console.log(err)\n        return next(err)\n      }\n      req.body.password = hash\n      next()\n    })\n  })\n}\n\nfunction checkIfAnEmailExists (req, res, next) {\n  const {createBadResponse} = req\n  Member.findOne({email: req.body.email}).exec((err, user) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    if (user !== null) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubieron errores en el documento', {\n        errors: ['El email que has puesto ya existe']\n      })\n      return next(new Error(res.locals))\n    }\n    next()\n  })\n}\n\nfunction checkIfAnAdminAlreadyExists (req, res, next) {\n  const {createBadResponse} = req\n  const {pvLvl} = req.body\n\n  if (pvLvl === undefined || pvLvl < 2) return next()\n  console.log('Mirando a ver si existe un usuario con el rol', pvLvl)\n  Member.findOne({pvLvl}).exec((err, user) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    if (user !== null) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'No pueden haber dos usuarios con ese rol', {\n        errors: ['Ya hay un usuario con ese rol']\n      })\n      return next(new Error(res.locals))\n    }\n    console.log('No existe')\n    next()\n  })\n}\n\nconst get = []\nconst create = [checkIfIsTheFirst, checkIfAnEmailExists, checkIfAnAdminAlreadyExists, signPassword]\nconst update = [checkIfAnAdminAlreadyExists]\nconst retrieve = []\nconst destroy = []\nconst logIn = []\n\nexport {get, create, update, retrieve, destroy, logIn}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/tasks/pre/index.js\n// module id = 27\n// module chunks = 0","import httpCodes from '../../../../../http-codes'\nimport Credentials from '../../../../../../prototypes/credentials'\n\nimport {encode} from '../../../../../../utils/user-token'\n\nconst bcrypt = require('bcrypt')\n\nfunction comparePasswords (req, res, next) {\n  const {createBadResponse, createGoodResponse} = req\n  const password = req.body.password\n  const {hash, user} = req.locals\n  bcrypt.compare(password, hash, function (err, result) {\n    console.log('\\nINFOOOO', result, '\\ncomparaciónd econtraseñas')\n    console.log(password)\n    console.log(hash, '\\n\\n')\n    if (err) {\n      console.log(err)\n      next(err)\n    }\n    if (!result) {\n      res.locals = createBadResponse(httpCodes.NOT_FOUND, 'No se encontró el usuario', {errors: ['La contraseña no es correcta']})\n      return next(res.locals)\n    }\n    let credentials = new Credentials(user)\n    let token = encode(credentials)\n    res.locals = createGoodResponse(httpCodes.OK, 'Te has logueado correctamente', {user: credentials, token})\n    return next()\n  })\n}\n\nconst get = []\nconst create = []\nconst update = []\nconst retrieve = []\nconst destroy = []\nconst logIn = [comparePasswords]\n\nexport {get, create, update, retrieve, destroy, logIn}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/members/tasks/post/index.js\n// module id = 28\n// module chunks = 0","export default function Credentials ({name, surname, email, pvLvl, _id}) {\n  this.name = name\n  this.surname = surname\n  this.email = email\n  this.pvLvl = pvLvl\n  this._id = _id\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./prototypes/credentials.js\n// module id = 29\n// module chunks = 0","import router from './api'\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/index.js\n// module id = 30\n// module chunks = 0","import {Router} from 'express'\nimport {create, retrieve, update, destroy, get} from './controllers'\nimport {createAuth, retrieveAuth, updateAuth, destroyAuth, getAuth} from './authorizations'\n\n// tasks\nimport {\n  retrieve as preRetrieveTasks,\n  update as preUpdateTasks,\n  destroy as preDestroyTasks,\n  get as preGetTasks,\n  create as preCreateTasks\n} from './tasks/pre'\n\nimport {\n  retrieve as postRetrieveTasks,\n  update as postUpdateTasks,\n  destroy as postDestroyTasks,\n  get as postGetTasks,\n  create as postCreateTasks\n} from './tasks/post'\n\nconst bodyParser = require('body-parser')\n\nlet router = new Router()\n\nrouter.get('/', retrieveAuth, preRetrieveTasks, retrieve, postRetrieveTasks)\nrouter.post('/', bodyParser.json(), createAuth, preCreateTasks, create, postCreateTasks)\nrouter.get('/:id', getAuth, preGetTasks, get, postGetTasks)\nrouter.put('/:id', bodyParser.json(), updateAuth, preUpdateTasks, update, postUpdateTasks)\nrouter.delete('/:id', destroyAuth, preDestroyTasks, destroy, postDestroyTasks)\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/api.js\n// module id = 31\n// module chunks = 0","import {filterFor} from './query-builder'\nimport Article from './model'\nimport httpCodes from '../../../http-codes'\n\nexport function retrieve (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const query = filterFor(req)\n  console.log(query.exec)\n  query.sort('-createdAt').exec((err, articles) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'Todos los articles fueron recuperados', {articles})\n    next()\n  })\n}\n\nexport function create (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  let article = new Article(req.body)\n  article.save((err, articleCreated) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    req.articleCreated = articleCreated\n    res.locals = createGoodResponse(httpCodes.CREATED, 'El Article fue creado correctamente', {articleCreated})\n    next()\n  })\n}\n\nexport function get (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Article.findById(req.params.id).populate('author', ['name', 'surname']).exec((err, article) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Article fue recuperado correctamente', {article})\n    next()\n  })\n}\n\nexport function update (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const $set = req.body\n  Article.findByIdAndUpdate(req.params.id, {$set}, (err, article) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Article fue actualizado correctamente', {article})\n    next()\n  })\n}\n\nexport function destroy (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Article.findByIdAndRemove(req.params.id, (err, article) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Article fue eliminado correctamente', {article})\n    next()\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/controllers.js\n// module id = 32\n// module chunks = 0","import article from '../model'\nimport {pipe} from '../../../../../utils/pipe-objects'\nimport {extractArtcilesForAuthorId, filterPublishedArticles, filterArticlesToModerate} from './filters'\n\nfunction buildQuery ({putOwnArticles, id, putPublishedArticles, putArticlesToModerate}) {\n  let query = article.find()\n\n  let filters = [\n    [putOwnArticles, extractArtcilesForAuthorId(id)],\n    [putPublishedArticles, filterPublishedArticles()],\n    [putArticlesToModerate, filterArticlesToModerate()]\n  ]\n\n  return pipe(query, function () {\n    this.through(filters)\n    return this.retrieve()\n  })\n}\n\nexport function filterFor ({query, params, user, loginLvl}) {\n  const email = loginLvl && user.email\n  const state = {\n    putOwnArticles: query.mine && email !== null,\n    id: loginLvl && user._id,\n    putPublishedArticles: query.state === '2',\n    putArticlesToModerate: query.moderating === 'true'\n  }\n\n  return buildQuery(state)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/query-builder/index.js\n// module id = 33\n// module chunks = 0","export function extractArtcilesForAuthorId (id) {\n  return query => query.where('author').equals(id)\n}\nexport function filterArticlesToModerate () {\n  return query => query.where('state').equals('1')\n}\nexport function filterPublishedArticles () {\n  return query => query.where('state').equals('2')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/query-builder/filters.js\n// module id = 34\n// module chunks = 0","export const retrieveAuth = (req, res, next) => next(undefined)\nexport const getAuth = (req, res, next) => next(undefined)\nexport const createAuth = (req, res, next) => next(req.user === null)\nexport const destroyAuth = (req, res, next) => next(undefined)\nexport const updateAuth = (req, res, next) => next(undefined)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/authorizations.js\n// module id = 35\n// module chunks = 0","import Member from '../../../members/model'\nfunction putAuthor (req, res, next) {\n  const {email} = req.user\n  Member.findOne({email}).exec((err, author) => {\n    if (err) {\n      console.log(err)\n      next(err)\n    }\n    req.author = author\n    req.body.author = author\n    next()\n  })\n}\n\nconst get = []\nconst create = [putAuthor]\nconst update = []\nconst retrieve = []\nconst destroy = []\n\nexport {get, create, update, retrieve, destroy}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/tasks/pre/index.js\n// module id = 36\n// module chunks = 0","import Member from '../../../members/model'\nfunction putArticle (req, res, next) {\n  const {email} = req.user\n\n  Member.findOne({email}, (err, author) => {\n    author.articles.push(req.articleCreated)\n    if (err) {\n      console.log(err)\n      return next(err)\n    }\n    author.save((err, authorWithArticle) => {\n      if (err) {\n        console.log(err)\n        return next(err)\n      }\n      next()\n    })\n  })\n}\n\nconst get = []\nconst create = [putArticle]\nconst update = []\nconst retrieve = []\nconst destroy = []\n\nexport {get, create, update, retrieve, destroy}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/articles/tasks/post/index.js\n// module id = 37\n// module chunks = 0","import router from './api'\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/index.js\n// module id = 38\n// module chunks = 0","import {Router} from 'express'\nimport {create, retrieve, update, destroy, get} from './controllers'\nimport {createAuth, retrieveAuth, updateAuth, destroyAuth, getAuth} from './authorizations'\n\n// tasks\nimport {\n  retrieve as preRetrieveTasks,\n  update as preUpdateTasks,\n  destroy as preDestroyTasks,\n  get as preGetTasks,\n  create as preCreateTasks\n} from './tasks/pre'\n\nimport {\n  retrieve as postRetrieveTasks,\n  update as postUpdateTasks,\n  destroy as postDestroyTasks,\n  get as postGetTasks,\n  create as postCreateTasks\n} from './tasks/post'\n\nconst bodyParser = require('body-parser')\n\nlet router = new Router()\n\nrouter.get('/', retrieveAuth, preRetrieveTasks, retrieve, postRetrieveTasks)\nrouter.post('/', bodyParser.json(), createAuth, preCreateTasks, create, postCreateTasks)\nrouter.get('/:id', getAuth, preGetTasks, get, postGetTasks)\nrouter.put('/:id', bodyParser.json(), updateAuth, preUpdateTasks, update, postUpdateTasks)\nrouter.delete('/:id', destroyAuth, preDestroyTasks, destroy, postDestroyTasks)\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/api.js\n// module id = 39\n// module chunks = 0","import {filterFor} from './query-builder'\nimport Event from './model'\nimport httpCodes from '../../../http-codes'\n\nexport function retrieve (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const query = filterFor(req)\n  query.exec((err, events) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    let eventsPublished = events.filter(event => {\n      let dateEvent = new Date(event.date + ' ' + event.time)\n      let consumed = Date.now() - dateEvent.getTime() > 0\n      return consumed\n    })\n    res.locals = createGoodResponse(httpCodes.OK, 'Todos los events fueron recuperados', {events: eventsPublished})\n    next()\n  })\n}\n\nexport function create (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  let event = new Event(req.body)\n  event.save((err, eventCreated) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.CREATED, 'El Event fue creado correctamente', {eventCreated})\n    next()\n  })\n}\n\nexport function get (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Event.findById(req.params.id, (err, event) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Event fue recuperado correctamente', {event})\n    next()\n  })\n}\n\nexport function update (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const $set = req.body\n  Event.findByIdAndUpdate(req.params.id, {$set}, (err, event) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Event fue actualizado correctamente', {event})\n    next()\n  })\n}\n\nexport function destroy (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Event.findByIdAndRemove(req.params.id, (err, event) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Event fue eliminado correctamente', {event})\n    next()\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/controllers.js\n// module id = 40\n// module chunks = 0","import event from '../model'\nimport {pipe} from '../../../../../utils/pipe-objects'\nimport {filterForPublished, sortByDateDesc} from './filters'\n\nfunction buildQuery ({filterPublished, sortByDate}) {\n  let query = event.find()\n\n  let filters = [\n    [filterPublished, filterForPublished()],\n    [sortByDate, sortByDateDesc()]\n  ]\n\n  return pipe(query, function () {\n    this.through(filters)\n    return this.retrieve()\n  })\n}\n\nexport function filterFor ({query, params, user, loginLvl}) {\n  console.log(query)\n  const state = {\n    filterPublished: query.published === 'true',\n    sortByDate: true\n  }\n\n  return buildQuery(state)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/query-builder/index.js\n// module id = 41\n// module chunks = 0","export function filterForPublished () {\n  return query => query.where('state').equals(1)\n}\nexport function sortByDateDesc () {\n  return query => query.sort('-createdAt')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/query-builder/filters.js\n// module id = 42\n// module chunks = 0","export const retrieveAuth = (req, res, next) => next(undefined)\nexport const getAuth = (req, res, next) => next(undefined)\nexport const createAuth = (req, res, next) => next(undefined)\nexport const destroyAuth = (req, res, next) => next(undefined)\nexport const updateAuth = (req, res, next) => next(undefined)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/authorizations.js\n// module id = 43\n// module chunks = 0","function preTask1 (req, res, next) {\n  next()\n}\n\nfunction preTask2 (req, res, next) {\n  next()\n}\n\nconst get = []\nconst create = []\nconst update = []\nconst retrieve = [preTask1, preTask2]\nconst destroy = []\n\nexport {get, create, update, retrieve, destroy}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/tasks/pre/index.js\n// module id = 44\n// module chunks = 0","function postTask1 (req, res, next) {\n  next()\n}\n\nfunction postTask2 (req, res, next) {\n  next()\n}\n\nconst get = []\nconst create = []\nconst update = []\nconst retrieve = [postTask1, postTask2]\nconst destroy = []\n\nexport {get, create, update, retrieve, destroy}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/events/tasks/post/index.js\n// module id = 45\n// module chunks = 0","import router from './api'\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/index.js\n// module id = 46\n// module chunks = 0","import {Router} from 'express'\nimport {create, retrieve, update, destroy, get} from './controllers'\nimport {createAuth, retrieveAuth, updateAuth, destroyAuth, getAuth} from './authorizations'\n\n// tasks\nimport {\n  retrieve as preRetrieveTasks,\n  update as preUpdateTasks,\n  destroy as preDestroyTasks,\n  get as preGetTasks,\n  create as preCreateTasks\n} from './tasks/pre'\n\nimport {\n  retrieve as postRetrieveTasks,\n  update as postUpdateTasks,\n  destroy as postDestroyTasks,\n  get as postGetTasks,\n  create as postCreateTasks\n} from './tasks/post'\n\nimport uploader from './storage/uploadImage'\nconst bodyParser = require('body-parser')\n\nlet router = new Router()\n\nrouter.get('/', retrieveAuth, preRetrieveTasks, retrieve, postRetrieveTasks)\nrouter.post('/', bodyParser.json(), createAuth, uploader.single('file'), preCreateTasks, create, postCreateTasks)\nrouter.get('/:id', getAuth, preGetTasks, get, postGetTasks)\nrouter.put('/:id', bodyParser.json(), updateAuth, preUpdateTasks, update, postUpdateTasks)\nrouter.delete('/:id', destroyAuth, preDestroyTasks, destroy, postDestroyTasks)\n\nexport default router\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/api.js\n// module id = 47\n// module chunks = 0","import {filterFor} from './query-builder'\nimport Photo from './model'\nimport httpCodes from '../../../http-codes'\n\nexport function retrieve (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const query = filterFor(req)\n  query.exec((err, photos) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'Todos los photos fueron recuperados', {photos})\n    next()\n  })\n}\n\nexport function create (req, res, next) {\n  console.log(req.file, req.body)\n  const {createGoodResponse, createBadResponse} = req\n  let photo = new Photo(req.body)\n  photo.save((err, photoCreated) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    req.locals = {\n      photoId: photoCreated._id\n    }\n    res.locals = createGoodResponse(httpCodes.CREATED, 'El Photo fue creado correctamente', {photoCreated})\n    next()\n  })\n}\n\nexport function get (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Photo.findById(req.params.id, (err, photo) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Photo fue recuperado correctamente', {photo})\n    next()\n  })\n}\n\nexport function update (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  const $set = req.body\n  Photo.findByIdAndUpdate(req.params.id, {$set}, (err, photo) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Photo fue actualizado correctamente', {photo})\n    next()\n  })\n}\n\nexport function destroy (req, res, next) {\n  const {createGoodResponse, createBadResponse} = req\n  Photo.findByIdAndRemove(req.params.id, (err, photo) => {\n    if (err) {\n      res.locals = createBadResponse(httpCodes.INTERNAL_ERROR, 'Hubo un error interno', {})\n      return next(err)\n    }\n    res.locals = createGoodResponse(httpCodes.OK, 'El Photo fue eliminado correctamente', {photo})\n    next()\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/controllers.js\n// module id = 48\n// module chunks = 0","import photo from '../model'\nimport {pipe} from '../../../../../utils/pipe-objects'\nimport {} from './filters'\n\nfunction buildQuery ({isJustVocal, isAdmin, notPutEvents, user, requestAll}) {\n  let query = photo.aggregate()\n  query.match({})\n\n  let filters = [\n  ]\n\n  return pipe(query, function () {\n    this.through(filters)\n    return this.retrieve()\n  })\n}\n\nexport function filterFor ({query, params, user, loginLvl}) {\n  const state = {\n  }\n\n  return buildQuery(state)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/query-builder/index.js\n// module id = 49\n// module chunks = 0","export const retrieveAuth = (req, res, next) => next(undefined)\nexport const getAuth = (req, res, next) => next(undefined)\nexport const createAuth = (req, res, next) => next(undefined)\nexport const destroyAuth = (req, res, next) => next(undefined)\nexport const updateAuth = (req, res, next) => next(undefined)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/authorizations.js\n// module id = 51\n// module chunks = 0","function preTask1 (req, res, next) {\n  next()\n}\n\nfunction preTask2 (req, res, next) {\n  next()\n}\n\nconst get = []\nconst create = []\nconst update = []\nconst retrieve = [preTask1, preTask2]\nconst destroy = []\n\nexport {get, create, update, retrieve, destroy}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/tasks/pre/index.js\n// module id = 52\n// module chunks = 0","import {getPathFor} from '../../storage/uploadImage'\nconst {copyFile, unlink} = require('fs')\nfunction tweakPhoto (req, res, next) {\n  copyFile(req.file.path, getPathFor(req.locals.photoId), err => {\n    if (err) {\n      console.log(err)\n      throw err\n    }\n    next()\n  })\n}\n\nfunction removeRawPhoto (req, res, next) {\n  unlink(req.file.path, err => {\n    if (err) {\n      console.log(err)\n      throw err\n    }\n    next()\n  })\n}\n\nconst get = []\nconst create = [tweakPhoto, removeRawPhoto]\nconst update = []\nconst retrieve = []\nconst destroy = []\n\nexport {get, create, update, retrieve, destroy}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/api/concepts/photos/tasks/post/index.js\n// module id = 53\n// module chunks = 0","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 54\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 55\n// module chunks = 0","import {pipe as pipeObjects} from '../utils/pipe-objects'\nimport {createBadResponse, createGoodResponse} from '../utils/response-maker'\nimport {getMongoDocumentErrors} from '../utils/controller-utils'\n\nexport {pipeObjects, createBadResponse, createGoodResponse, getMongoDocumentErrors}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/default-properties.js\n// module id = 56\n// module chunks = 0","export function createBadResponse (status, message, items) {\n  return {status, message, items}\n}\nexport function createGoodResponse (status, message, items) {\n  return {status, message, items}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./utils/response-maker.js\n// module id = 57\n// module chunks = 0","export function getMongoDocumentErrors (error) {\n  let errors = error.errors\n  let errorsFormatted = []\n  for (let i in errors) {\n    let error = errors[i].message\n    errorsFormatted.push(error)\n  }\n  return errorsFormatted\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./utils/controller-utils.js\n// module id = 58\n// module chunks = 0","import {recoverUser} from '../../utils/user-token'\n\nexport default [recoverUser]\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/middlewares/index.js\n// module id = 59\n// module chunks = 0","module.exports = {\n  /*\n  ** Headers of the page\n  */\n  head: {\n    title: 'starter',\n    meta: [\n      { charset: 'utf-8' },\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { hid: 'description', name: 'description', content: 'Nuxt.js project' }\n    ],\n    link: [\n      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\n    ]\n  },\n  css: [\n    '@/assets/main.scss'\n  ],\n  plugins: [\n    '~/plugins/setup-vue',\n    { src: '~/plugins/persistence.js', ssr: false }\n  ],\n  /*\n  ** Add axios globally\n  */\n  build: {\n    vendor: ['axios'],\n    /*\n    ** Run ESLINT on save\n    */\n    extend (config, ctx) {\n      if (ctx.isClient) {\n        config.module.rules.push({\n          enforce: 'pre',\n          test: /\\.(js|vue)$/,\n          loader: 'eslint-loader',\n          exclude: /(node_modules)/\n        })\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./nuxt.config.js\n// module id = 60\n// module chunks = 0"],"sourceRoot":""}